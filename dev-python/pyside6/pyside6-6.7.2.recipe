SUMMARY="Python bindings for the Qt 6 cross-platform application and UI framework"
DESCRIPTION="The Qt for Python project aims to provide a complete port of the PySide module to \
Qt. The development started on GitHub in May 2015. The project managed to port PySide to Qt 5.3, \
5.4 & 5.5. During April 2016 The Qt Company decided to properly support the port (see details ).

The module was released mid June 2018 as a Technical Preview (supporting Qt 5.11), and it was \
officially released without the Technical Preview tag, in December 2018 for Qt 5.12. In December \
2020, the module was released for Qt6, which is the latest available version, which has the \
following differences:

* It doesn't support Python 2.7,
* Dropped support for Python 3.5, keeping 3.6+ only until PySide 6.3
* PySide 6.4 is the first version that supports Python 3.7+"
HOMEPAGE="https://wiki.qt.io/Qt_for_Python"
COPYRIGHT="2015-2025 The Qt Company Ltd."
LICENSE="BSD (3-clause)
	GNU GPL v2
	GNU LGPL v3"
REVISION="1"
SOURCE_URI="https://download.qt.io/official_releases/QtForPython/pyside6/PySide6-$portVersion-src/pyside-setup-everywhere-src-$portVersion.tar.xz"
CHECKSUM_SHA256="3a2b0d0d6e78c9aa5ddc7f06ca4b6f11a3fe14560baeb148eea53b5d98e368c7"
SOURCE_DIR="pyside-setup-everywhere-src-$portVersion"
PATCHES="pyside6-$portVersion.patchset"

ARCHITECTURES="?all x86_64"
SECONDARY_ARCHITECTURES="?x86"

libVersion="$portVersion"
libVersionCompat="$libVersion compat >= ${libVersion%%.*}"

PROVIDES="
	pyside6$secondaryArchSuffix = $portVersion
	lib:libpyside6.abi3$secondaryArchSuffix = $libVersionCompat
	lib:libpyside6qml.abi3$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libGL$secondaryArchSuffix
	lib:libLLVM$secondaryArchSuffix
	lib:libshiboken6.abi3$secondaryArchSuffix
	# Qt6
	lib:libQt6Core$secondaryArchSuffix
	# optional
#		lib:libQt63DCore$secondaryArchSuffix
#		lib:libQt6Charts$secondaryArchSuffix
#		lib:libQt6DataVisualization$secondaryArchSuffix
#		lib:libQt6Help$secondaryArchSuffix
#		lib:libQt6Location$secondaryArchSuffix
#		lib:libQt6Multimedia$secondaryArchSuffix
#		lib:libQt6Network$secondaryArchSuffix
#		lib:libQt6Positioning$secondaryArchSuffix
	lib:libQt6Qml$secondaryArchSuffix
#		lib:libQt6Quick$secondaryArchSuffix
#		lib:libQt6Quick3D$secondaryArchSuffix
#		lib:libQt6Scxml$secondaryArchSuffix
#		lib:libQt6Sensors$secondaryArchSuffix
#		lib:libQt6SerialPort$secondaryArchSuffix
#		lib:libQt6ShaderTools$secondaryArchSuffix
#		lib:libQt6SpatialAudio$secondaryArchSuffix
#		lib:libQt6StateMachine$secondaryArchSuffix
#		lib:libQt6Svg$secondaryArchSuffix
#		lib:libQt6TextToSpeech$secondaryArchSuffix
#		lib:libQt6WebChannelQuick$secondaryArchSuffix
#		lib:libQt6WebSockets$secondaryArchSuffix
#		lib:libQt6Xml$secondaryArchSuffix
	"

PROVIDES_devel="
	pyside6${secondaryArchSuffix}_devel = $portVersion
	devel:libpyside6.abi3$secondaryArchSuffix = $libVersionCompat
	devel:libpyside6qml.abi3$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	pyside6$secondaryArchSuffix == $portVersion base
	"

PROVIDES_tools="
	pyside6${secondaryArchSuffix}_tools = $portVersion
	cmd:android_deploy.py
	cmd:deploy.py
	cmd:deploy_lib
	cmd:metaobjectdump.py
	cmd:project.py
	cmd:project_lib
	cmd:pyside_tool.py
	cmd:qml.py
	cmd:qtpy2cpp.py
	cmd:qtpy2cpp_lib
	cmd:requirements_android.txt
	"
REQUIRES_tools="
	pyside6$secondaryArchSuffix == $portVersion base
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	gcc${secondaryArchSuffix}_syslibs_devel
	devel:libclang$secondaryArchSuffix >= 18
	devel:libclang_cpp$secondaryArchSuffix >= 18
	devel:libLLVM_18$secondaryArchSuffix
	devel:libshiboken6.abi3$secondaryArchSuffix == $portVersion
	# Qt6
	devel:libQt6Core$secondaryArchSuffix
	# optional
#		qt6_tools${secondaryArchSuffix}_devel
#		devel:libQt63DCore$secondaryArchSuffix
#		devel:libQt6Charts$secondaryArchSuffix
	devel:libQt6Concurrent$secondaryArchSuffix
#		devel:libQt6Bluetooth$secondaryArchSuffix
	devel:libQt6DBus$secondaryArchSuffix
#		devel:libQt6DataVisualization$secondaryArchSuffix
#		devel:libQt6Graphs$secondaryArchSuffix
	devel:libQt6Gui$secondaryArchSuffix
#		devel:libQt6HttpServer$secondaryArchSuffix
#		devel:libQt6Location$secondaryArchSuffix
#		devel:libQt6Multimedia$secondaryArchSuffix
	devel:libQt6Network$secondaryArchSuffix
#		devel:libQt6NetworkAuth$secondaryArchSuffix
#		devel:libQt6Nfc$secondaryArchSuffix
	devel:libQt6OpenGL$secondaryArchSuffix
	devel:libQt6OpenGLWidgets$secondaryArchSuffix
#		devel:libQt6Positioning$secondaryArchSuffix
	devel:libQt6PrintSupport$secondaryArchSuffix
	devel:libQt6Qml$secondaryArchSuffix
	devel:libQt6Quick$secondaryArchSuffix
	devel:libQt6QuickControls2$secondaryArchSuffix
	devel:libQt6QuickWidgets$secondaryArchSuffix
#		devel:libQt6Quick3D$secondaryArchSuffix
#		devel:libQt6RemoteObjects$secondaryArchSuffix
#		devel:libQt6Scxml$secondaryArchSuffix
#		devel:libQt6Sensors$secondaryArchSuffix
#		devel:libQt6SerialBus$secondaryArchSuffix
#		devel:libQt6SerialPort$secondaryArchSuffix
#		devel:libQt6ShaderTools$secondaryArchSuffix
	devel:libQt6Sql$secondaryArchSuffix
#		devel:libQt6Svg$secondaryArchSuffix
	devel:libQt6Test$secondaryArchSuffix
#		devel:libQt6TextToSpeech$secondaryArchSuffix
#		devel:libQt6WebChannel$secondaryArchSuffix
#		devel:libQt6WebSockets$secondaryArchSuffix
	devel:libQt6Widgets$secondaryArchSuffix
	devel:libQt6Xml$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	sphinx_python310
	cmd:cmake
	cmd:dot
	cmd:gcc$secondaryArchSuffix
	cmd:llvm_config >= 18
	cmd:make
	cmd:pkg_config$secondaryArchSuffix
	cmd:python3.10
	"

BUILD()
{
	cmake -B build -S . -DCMAKE_BUILD_TYPE=Release \
		$cmakeDirArgs \
		-DLIB_INSTALL_DIR=$libDir \
		-DPYTHON_SITE_PACKAGES=$libDir/python3.10/vendor-packages \
		-DBUILD_SHARED_LIBS=ON \
		-DBUILD_TESTS=OFF \
		-DSHIBOKEN_BUILD_LIBS=OFF \
		-DSHIBOKEN_BUILD_TOOLS=OFF \
		-DNO_QT_TOOLS=yes

	make -C build $jobArgs
}

INSTALL()
{
	make -C build install

	# shift files around (not found a sollution to automate this install for it)
	cp -r $prefix/include/PySide6/* $includeDir/PySide6
	rm -rf $prefix/include
	cp -r $prefix/share/PySide6/* $dataDir/PySide6
	rm -rf $prefix/share
#	rm -rf $prefix/bin

	prepareInstalledDevelLibs \
		libpyside6.abi3 \
		libpyside6qml.abi3
	fixPkgconfig

	packageEntries tools \
		$prefix/bin

	packageEntries devel \
		$developDir \
		$libDir/cmake
}

TEST()
{
	ctest --test-dir build --output-on-failure
}
